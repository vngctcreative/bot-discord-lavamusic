const config = require("../config.js");
const { InteractionType } = require('discord.js');
const fs = require("fs");
const path = require("path");

module.exports = async (client, interaction) => {
  try {
    if (!interaction?.guild) {
      return interaction?.reply({ content: "üö´ L·ªánh n√†y ch·ªâ c√≥ th·ªÉ ƒë∆∞·ª£c s·ª≠ d·ª•ng trong m√°y ch·ªß.", ephemeral: true });
    } else {
      function cmd_loader() {
        if (interaction?.type === InteractionType.ApplicationCommand) {
          // ƒê·ªçc t·∫•t c·∫£ c√°c t·ªáp l·ªánh t·ª´ th∆∞ m·ª•c commands
          const readCommands = (dir) => {
            fs.readdirSync(dir).forEach(file => {
              const filePath = path.join(dir, file);
              if (fs.lstatSync(filePath).isDirectory()) {
                // N·∫øu l√† th∆∞ m·ª•c, g·ªçi l·∫°i h√†m ƒë·ªÉ duy·ªát th∆∞ m·ª•c con
                readCommands(filePath);
              } else if (file.endsWith(".js")) {
                let props = require(filePath);
                if (interaction.commandName === props.name) {
                  try {
                    if (interaction?.member?.permissions?.has(props?.permissions || "0x0000000000000800")) {
                      return props.run(client, interaction);
                    } else {
                      return interaction?.reply({ content: "üîí B·∫°n kh√¥ng c√≥ quy·ªÅn s·ª≠ d·ª•ng l·ªánh n√†y.", ephemeral: true });
                    }
                  } catch (e) {
                    return interaction?.reply({ content: `‚ùå L·ªói: ${e.message}`, ephemeral: true });
                  }
                }
              }
            });
          };

          readCommands(path.resolve(config.commandsDir));
        }
      }

      cmd_loader();
    }
  } catch (e) {
    console.error(e);
  }
};
