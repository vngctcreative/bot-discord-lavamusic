const { EmbedBuilder } = require('discord.js');

module.exports = {
  name: 'steal_emoji',
  description: 'üïµ C∆∞·ªõp emoji t·ª´ server kh√°c v·ªÅ server c·ªßa b·∫°n d·ª±a tr√™n link emoji ƒë∆∞·ª£c cung c·∫•p',
  permissions: '0x0000000000000800', // Quy·ªÅn ki·ªÉm so√°t emoji
  options: [
    {
      name: 'name',
      description: 'T√™n c·ªßa emoji m·ªõi',
      type: 3, // String
      required: true,
    },
    {
      name: 'url',
      description: 'Li√™n k·∫øt ƒë·∫øn emoji b·∫°n mu·ªën sao ch√©p',
      type: 3, // String
      required: true,
    },
  ],
  run: async (client, interaction) => {
    if (!interaction.member.permissions.has('MANAGE_EMOJIS_AND_STICKERS')) {
      const embed = new EmbedBuilder()
        .setColor('#ff0000')
        .setTitle('‚ùå Kh√¥ng C√≥ Quy·ªÅn')
        .setDescription('B·∫°n kh√¥ng c√≥ quy·ªÅn ki·ªÉm so√°t emoji.');
      return interaction.reply({ embeds: [embed] });
    }

    const emojiName = interaction.options.getString('name');
    let emojiUrl = interaction.options.getString('url');

    // Thay ƒë·ªïi k√≠ch th∆∞·ªõc c·ªßa emoji xu·ªëng 48
    if (emojiUrl.includes('?size=')) {
      emojiUrl = emojiUrl.replace(/size=\d+/, 'size=48');
    } else {
      emojiUrl += '?size=48';
    }

    try {
      // S·ª≠ d·ª•ng dynamic import() ƒë·ªÉ nh·∫≠p node-fetch
      const { default: fetch } = await import('node-fetch');

      const response = await fetch(emojiUrl);
      if (!response.ok) throw new Error('L·ªói t·∫£i emoji.');

      const arrayBuffer = await response.arrayBuffer();
      const buffer = Buffer.from(arrayBuffer);

      // Ki·ªÉm tra k√≠ch th∆∞·ªõc buffer
      if (buffer.length === 0) {
        throw new Error('Buffer kh√¥ng h·ª£p l·ªá.');
      }

      const emoji = await interaction.guild.emojis.create({
        attachment: buffer,
        name: emojiName,
      });

      const embed = new EmbedBuilder()
        .setColor('#6190ff')
        .setTitle('‚úÖ ƒê√£ C∆∞·ªõp Emoji Th√†nh C√¥ng !!!')
        .setDescription(`
          **Emoji link ƒë√£ c∆∞·ªõp:** ${emojiUrl}
          **T√™n emoji:** ${emoji.name}
          **ID emoji:** ${emoji.id}
        `)
        .setThumbnail(emojiUrl);
        
      return interaction.reply({ embeds: [embed] });
    } catch (error) {
      console.error('L·ªói khi t·∫°o emoji:', error);
      const embed = new EmbedBuilder()
        .setColor('#ff0000')
        .setTitle('‚ùå L·ªói')
        .setDescription('C√≥ l·ªói x·∫£y ra khi c∆∞·ªõp emoji. ƒê·∫£m b·∫£o r·∫±ng k√≠ch th∆∞·ªõc c·ªßa emoji l√† 48x48 ho·∫∑c nh·ªè h∆°n.');
      
      return interaction.reply({ embeds: [embed] });
    }
  },
};